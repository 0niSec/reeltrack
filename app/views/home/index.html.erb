<div class="relative">
    <!-- Background gradient -->
    <div class="absolute min-h-screen inset-x-0 -z-10">
        <div class="min-h-screen bg-gradient-to-b from-primary-900/20 via-primary-900/10 "></div>
    </div>

    <!-- Anime.js animation container -->
    <div id="animation-container" class="absolute inset-0 -z-5">
        <!-- Circles will be dynamically added here -->
    </div>

    <!-- Hero Section -->
    <div class="relative z-10 flex flex-col min-h-screen justify-center">
        <div class="flex flex-col justify-center">
            <div>
                <h1 class="text-8xl font-bold text-center mb-6">Reeltrack</h1>
                <p class="text-xl font-medium text-center text-primary-200">Movies and TV. All in one place.</p>
                <p class="text-xl font-medium text-center text-primary-200">Add movies and TV shows to your watchlist, track your progress, and get recommendations.</p>
            </div>

            <div class="mt-12 text-center">
                <% if authenticated? %>
                    <%= link_to "Browse Movies", movies_path, class: "inline-block px-8 py-4 bg-primary-600 hover:bg-primary-500 text-white font-bold rounded-lg transform transition hover:scale-105 hover:rotate-1" %>
                <% else %>
                    <%= link_to "Start Tracking Today", sign_up_path, class: "inline-block px-8 py-4 bg-primary-600 hover:bg-primary-500 text-white font-bold rounded-lg transform transition hover:scale-105 hover:rotate-1" %>
                <% end %>
            </div>
        </div>

        <!-- Feature Cards -->
        <div class="container mx-auto mt-40">
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                <!-- Track Card -->
                <div class="bg-primary-800/30 p-6 rounded-lg backdrop-blur border border-primary-700">
                    <div class="text-primary-400 mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Track Everything</h3>
                    <p class="text-neutral-300">Keep a record of every movie and show you've watched, want to watch, or are currently watching.</p>
                </div>

                <!-- Discover Card -->
                <div class="bg-primary-800/30 p-6 rounded-lg backdrop-blur border border-primary-700">
                    <div class="text-primary-400 mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                        </svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Discover New Content</h3>
                    <p class="text-neutral-300">Find new movies and shows based on your watching history and preferences.</p>
                </div>

                <!-- Share Card -->
                <div class="bg-primary-800/30 p-6 rounded-lg backdrop-blur border border-primary-700">
                    <div class="text-primary-400 mb-4">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.368 2.684 3 3 0 00-5.368-2.684z" />
                        </svg>
                    </div>
                    <h3 class="text-xl font-bold mb-2">Share With Friends</h3>
                    <p class="text-neutral-300">Share your watchlists and recommendations with friends and family.</p>
                </div>
            </div>
        </div>
    </div>
</div>

<%= javascript_include_tag "https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js", "data-turbo-track": "reload" %>

<script>
    document.addEventListener('turbo:load', () => {
        // Clear any existing circles first
        const container = document.getElementById('animation-container');
        container.innerHTML = '';

        const colors = ['#fce4e4', '#facece', '#f6abab', '#ef7a7a', '#e35050'];

        // Create floating circles with varying sizes
        for (let i = 0; i < 20; i++) {
            const circle = document.createElement('div');
            circle.className = 'absolute rounded-full opacity-30';
            const size = Math.random() * 60 + 20; // More size variation

            circle.style.width = `${size}px`;
            circle.style.height = `${size}px`;
            circle.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
            circle.style.left = `${Math.random() * 90 + 5}%`;
            circle.style.top = `${Math.random() * 90 + 5}%`;

            container.appendChild(circle);
        }

        // More random, bubble-like animation
        anime({
            targets: '#animation-container div',
            translateX: function() {
                return anime.random(-75, 75);
            },
            translateY: function() {
                return anime.random(-100, 100);
            },
            scale: [
                { value: 1.25, duration: anime.random(1000, 1500) },
                { value: 0.75, duration: anime.random(1000, 1500) },
                { value: 1.0, duration: anime.random(1000, 1500) }
            ],
            rotate: function() {
                return anime.random(-15, 15);
            },
            opacity: {
                value: [0.2, 0.4],
                duration: 1000,
                easing: 'easeInOutQuad'
            },
            delay: anime.stagger(100),
            duration: 1000,
            loop: true,
            direction: 'alternate',
            easing: 'easeInOutSine',
            // endDelay: function() {
            //     return anime.random(500, 1000);
            // }
        });
    });

    // Add a backup event listener for regular page loads
    document.addEventListener('DOMContentLoaded', () => {
        if (!window.Turbo) {
            // Same code as above
        }
    });
</script>
